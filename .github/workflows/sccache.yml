on:
  push:
    branches:
      - main
    tags:
      - "sccache-*"
    paths:
      - .github/workflows/sccache.yml
  pull_request:
    paths:
      - .github/workflows/sccache.yml
  workflow_dispatch:

name: sccache

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  build:
    name: Build on ${{ matrix.platform.os }} for ${{ matrix.platform.target }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-latest
            target: x86_64
            # dist-server only supports x86_64 Linux
            features: dist-server,reqwest/native-tls-vendored
            before-script: yum install -y perl-IPC-Cmd
          - os: ubuntu-latest
            target: i686
            features: reqwest/native-tls-vendored
            before-script: yum install -y perl-IPC-Cmd
          - os: ubuntu-latest
            target: aarch64
            features: reqwest/native-tls-vendored
          - os: macos-latest
            target: x86_64
            features: reqwest/native-tls-vendored
          - os: macos-latest
            target: aarch64
            features: reqwest/native-tls-vendored
          - os: windows-latest
            target: x86_64
            features: reqwest/native-tls-vendored
          - os: windows-latest
            target: aarch64
            features: reqwest/native-tls-vendored
          - os: windows-latest
            target: i686
            features: reqwest/native-tls-vendored
    steps:
      - uses: actions/checkout@v3
        with:
          repository: mozilla/sccache
          ref: v0.10.0
          path: sccache
      - uses: dtolnay/rust-toolchain@stable
      - uses: PyO3/maturin-action@v1
        env:
          # Workaround ring 0.17 build issue
          CFLAGS_aarch64_unknown_linux_gnu: "-D__ARM_ARCH=8"
        with:
          working-directory: sccache
          target: ${{ matrix.platform.target }}
          manylinux: auto
          args: --release -o dist --features ${{ matrix.platform.features }}
          before-script-linux: ${{ matrix.platform.before-script || '' }}
      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.platform.os }}-${{ matrix.platform.target }}
          path: sccache/dist

  release-pypi:
    permissions:
      # Used to sign the release's artifacts with sigstore-python.
      id-token: write
      # Used to upload release artifacts.
      contents: write
    name: Publish to PyPI
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Publish
        env:
          MATURIN_PASSWORD: ${{ secrets.MATURIN_PASSWORD }}
        run: |
          set -ex
          pip install maturin
          maturin upload -u __token__ --skip-existing *
      - name: Sigstore Sign
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: ./*.whl
          upload-signing-artifacts: true
      - name: Release signing artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.whl
            *.sig
            *.crt
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'pre') }}
          generate_release_notes: true
